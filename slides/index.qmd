---
title: "Cambridge, New York"
subtitle: ""
author: "Don Boyd"
date: today
date-format: long
format:
  
  revealjs: 
    slide-number: true
    chalkboard: 
      buttons: false
    preview-links: auto
    theme: [white, mycss.scss] # use white, with modifications; default also ok
  # pdf:
  #   toc: false
execute:
  eval: true
  echo: false
  error: false
  warning: false
  message: false  # not sure if allowed
  note: false  # not sure if allowed
  freeze: auto  # during global project renders, re-render only when source changes
editor_options: 
  chunk_output_type: console
---

## Topics

-   Demographics - age, education

-   Employment, income, and poverty

-   Business activity

-   Housing

-   Trends and Outlook

-   Implications for Economic Development

::: {.content-visible when-format="html"}
::: notes
:::
:::

```{=html}
<!--

Rendering:

# quarto render
# quarto render index.qmd --to html
# quarto render index.qmd --to pdf


Publishing to the web:

quarto publish netlify index.qmd
quarto publish netlify index.qmd --no-render --no-browser --no-prompt
quarto publish netlify index.qmd --no-browser --no-prompt

https://boyd-cambridge.netlify.app

The <dd> tag is used to describe a term/name in a description list.

The <dd> tag is used in conjunction with <dl> (defines a description list) and <dt> (defines terms/names).

Inside a <dd> tag you can put paragraphs, line breaks, images, links, lists, etc.

Document font size - see process for live review
https://www.youtube.com/watch?v=yAlhq8yhLsw

 {.smaller}

-->
```


```{r}
#| label: includes
#| eval: true
#| include: false

source(here::here("r", "libraries.r"))
source(here::here("r", "functions.r"))

```

```{r}
#| label: acs5-vars
#| eval: false
#| include: false

# get 5-year acs variables
vacs2009 <- load_variables(2009, "acs5", cache = TRUE)
vacs2011 <- load_variables(2011, "acs5", cache = TRUE)
vacs2014 <- load_variables(2014, "acs5", cache = TRUE)
vacs2016 <- load_variables(2016, "acs5", cache = TRUE)
vacs2018 <- load_variables(2018, "acs5", cache = TRUE)
vacs2019 <- load_variables(2019, "acs5", cache = TRUE)
vacs2021 <- load_variables(2021, "acs5", cache = TRUE)
vacs1 <- 
  bind_rows(vacs2009 %>% mutate(endyear=2009),
            vacs2011 %>% mutate(endyear=2011),
            vacs2014 %>% mutate(endyear=2014),
            vacs2016 %>% mutate(endyear=2016),
            vacs2018 %>% mutate(endyear=2018),
            vacs2019 %>% mutate(endyear=2019),
            vacs2021 %>% mutate(endyear=2021))

vacs <- vacs1 |> 
  rename(variable=name) |>
  mutate(table=str_extract_before_first(variable, "_"),
         slabel=str_extract_after_last(label, "!!") |> 
           str_to_lower() |> 
           str_remove(":")) |> 
  arrange(endyear, table, variable) |> 
  group_by(endyear, table) |>
  mutate(rownum=row_number()) |> 
  ungroup()

count(vacs, endyear)

saveRDS(vacs, here::here("data", "vacs.rds"))

vacs <- readRDS(here::here("data", "vacs.rds"))


s <- "education"
s <- "population"
tmp <- vacs |> 
  select(table, concept) |> 
  filter(str_detect(concept, coll(s, ignore_case=TRUE))) |> 
  distinct()

tmp <- vacs |> 
  filter(str_detect(label, coll("education", ignore_case=TRUE)))

tmp <- vacs |> 
  filter(str_detect(label, coll("bachelor", ignore_case=TRUE)))

tmp <- vacs |> 
  filter(str_detect(label, coll("bachelor", ignore_case=TRUE)))


```


```{r}
#| label: xwalk
#| eval: false
#| include: false

# ONETIME (keep eval=false except when updating)
# create tibble with detailed geo information, population, and geometry

# TODO: 
#   county information for places, cousubs
#   

# B01003 TOTAL POPULATION
df1 <- get_acstab(acstab="B01003", year=2021, geometry=TRUE)
# clean and save as xwalk
df2 <- df1 |> 
  rename(stabbr=stusps, pop=estimate) |> 
  select(-variable, -moe, -table) |> 
  relocate(stabbr, statefp, geoid, geotype, geoname, fullname,
           year, lsad) |> 
  relocate(aland, awater, pop, geometry, .after=placens)
saveRDS(df2, here::here("data", "xwalkny_acs.rds"))


```



```{r}
#| label: create-common-data
#| eval: false
#| include: false

# ONETIME

acstab <- "B15002"
year <- 2021

# get states, and NY:
#   counties, cousubs, places, sds
B15002_2021 <- get_acstab("B15002", year=2021)
saveRDS(B15002_2021, here::here("data", "B15002_2021.rds"))


```


```{r}
#| label: load-basic-data
#| eval: true
#| include: false

xwalkny <- readRDS(here::here("data", "xwalkny_acs.rds"))


```


```{r}
#| label: constants
#| eval: false
#| include: false

# key counties
# 36091 Saratoga
# 36113 Warren
# 36115 Washington

# key cousubs
# 3611511836 Cambridge town
# 3611530686 Greenwich town
# 3611564782 Salem town
# 3611581578 White Creek town
tmp <- c("3611511836", "3611530686", "3611581578")

# key places
# 3602550 Argyle village
# 3611825 Cambridge village
# 3630675 Greenwich village
# 3664771 Salem CDP
# 3665750 Schuylerville

# school district
# 3606210    Cambridge Central School District
# 3612900    Greenwich Central School District
# 3625470    Salem Central School District

# 3602550    Alden Central School District ????

# look for geoids
xwalkny |> 
  as_tibble() |> # needed so that we can drop geometry
  filter(geotype=="place") |> 
  select(geoid, geoname, fullname, namelsad) |> 
  arrange(geoid)

xwalkny |> 
  as_tibble() |> # needed so that we can drop geometry
  filter(str_detect(fullname, coll("Salem", ignore_case=TRUE))) |> 
  select(geoid, geotype, geoname, fullname, namelsad) |> 
  arrange(geoid)


# areas of interest
state_aoi <- c("36")
cnty_aoi <- c("36091", "36113", "36115")
vlg_aoi <- c("3611825", "3630675", "3664771", "3665750") 
twn_aoi <- c("3611511836", "3611530686", "3611581578")
aoi <- c(state_aoi, cnty_aoi, vlg_aoi, twn_aoi)

```


```{r}
#| label: load-table-data
#| eval: true
#| include: false


# B15002 <- readRDS(here::here("data", "B15002_2021"))


```


# Profile of Cambridge

## Age

## Education

```{r}
#| label: ed-data
#| eval: true
#| include: false

vacs <- readRDS(here::here("data", "vacs.rds"))
b15002 <- readRDS(here::here("data", "B15002_2021.rds"))
count(b15002, geotype)

# B15002 SEX BY EDUCATIONAL ATTAINMENT FOR THE POPULATION 25 YEARS AND OVER
# B15003 EDUCATIONAL ATTAINMENT FOR THE POPULATION 25 YEARS AND OVER
edvacs <- vacs |> 
  filter(table=="B15002", endyear==2021) |> 
  mutate(gender=case_when(
    str_detect(label, "Male") ~ "male",
    str_detect(label, "Female") ~ "female",
    label=="Estimate!!Total:" ~ "all",
    TRUE ~ "ERROR"))
count(edvacs, gender)

df1 <- b15002 |> 
  left_join(edvacs |>
              select(variable, rownum, gender, slabel),
            by = join_by(variable)) |> 
  mutate(vname=case_when(
    rownum %in% c(1, 2, 19) ~ slabel,
    # rownum==1 ~ "all",
    # rownum==2 ~ "male",
    # rownum==19 ~ "female",
    rownum %in% c(3:10, 20:27) ~ "lths",
    rownum %in% c(11:13, 28:30) ~ "hs",
    rownum %in% c(14, 31) ~ "aa",
    rownum %in% c(15, 32) ~ "ba",
    rownum %in% c(16:18, 33:35) ~ "maplus",
    TRUE ~ "ERROR"))
count(df1, vname)  
count(df1, geotype)

df2 <- df1 |> 
  summarise(estimate=sum(estimate),
            .by=c(geoid, geoname, vname)) |> 
  pivot_wider(names_from = vname, values_from = estimate) |> 
  mutate(ltaapct=(lths + hs) / total,
         aapct=aa / total, 
         bapct=ba / total, 
         mapluspct=maplus / total)

df3 <- df2 |> 
  select(geoid, geoname, contains("pct")) |> 
  arrange(desc(ltaapct)) |> 
  mutate(rank=row_number(), n=n())


```

```{r}
#| label: ed-table
#| eval: true
#| include: true


df3 |> 
  filter(geoid %in% aoi)


```

# Trends and Outlook

# Implications for Economic Development

------------------------------------------------------------------------

<!-- ![](images/budget_actors.png) -->

something here
