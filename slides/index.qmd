---
title: "Cambridge, New York"
subtitle: ""
author: "Don Boyd"
date: today
date-format: long
format:
  
  revealjs: 
    slide-number: true
    chalkboard: 
      buttons: false
    preview-links: auto
    theme: [white, mycss.scss] # use white, with modifications; default also ok
  # pdf:
  #   toc: false
execute:
  eval: true
  echo: false
  error: false
  warning: false
  message: false  # not sure if allowed
  note: false  # not sure if allowed
  freeze: auto  # during global project renders, re-render only when source changes
editor_options: 
  chunk_output_type: console
---

## Topics

-   Who lives here?

-   What's our economy like?

-   What's our housing situation?

-   How have we been changing?

-   What do we know about the outlook?

-   What does this mean for economic development?


::: {.content-visible when-format="html"}
::: notes
Who lives here? demographics (age, ), education, employment, income, commuting
What's our economy like?
How have we been changing?
What does it cost to live here?
What's the outlook?

:::
:::


```{r}
#| label: includes
#| eval: true
#| include: false

source(here::here("r", "libraries.r"))
source(here::here("r", "functions.r"))

# df2 <- read_tabny("B01001")
# bacs:::default_xdacs
# tabnames <- c("B01001", "B01002", "B01003", "B07001", "B07009", "B07409", "B15002", "B15003", "B25071")
# purrr::map(tabnames, save_tabny)
# purrr::map(tabnames, save_tabny, overwrite=TRUE)

# tabname <- "B15002"
# df <- get_enhanced(tabname)

```


```{r}
#| label: get-table-summary
#| eval: true
#| include: false

acstabs_wide(c(2011, 2016, 2021))
find_acstab("age")

tmp <- find_acstab("age", acstabs_wide(c(2011, 2016, 2021))) |> 
  filter(str_detect(title, "POVERTY"), str_detect(title, "RATIO"))

find_acstab("public health insurance", acstabs_wide(c(2011, 2016, 2021)))

# B17001
df <- get_acstab("B27003")
df2 <- enhance(df)

tmp <- acsvars |> 
  filter(table=="B27003", year %in% c(2016, 2021)) |> 
  select(year, line, variable, label) |> 
  arrange(year, line)

tmp |> 
  summarise(n=n(), .by=c(line, label))
tmp |> arrange(line, year) # ouch, notice that line 6 covers different groups in 2016 and 2021

tmp |> filter(year==2021) |> arrange(line) 


covg <- tmp |> filter(year==2021, str_detect(label, "With public")) # 18 recs
nocovg <- tmp |> filter(year==2021, str_detect(label, "No public")) # 18 recs

slabels <- acsvars |> 
  filter(table=="B27003", year==2021) |> 
  select(line, variable, label) |> 
  mutate(covgtype=case_when(line %in% covg$line ~ "withpublic",
                            line %in% nocovg$line ~ "nopublic",
                            TRUE ~ "other"))
slabels

df3 <- df2 |> 
  left_join(slabels, by = join_by(variable, line, label)) |> 
  filter(covgtype!="other") |> 
  summarise(estimate=sum(estimate), .by=c(affgeoid, geoid, shortname, shortestname, nygeotype, covgtype))

df4 <- df3 |> 
  pivot_wider(names_from = covgtype, values_from = estimate) |> 
  mutate(total=withpublic + nopublic,
         pubpct=withpublic / total)

df4 |> 
  filter(geoid %in% aoi, !affgeoid %in% badgeos) |> 
  arrange(desc(pubpct))
  

```



```{r}
#| label: functions-utility
#| eval: true
#| include: false




```



```{r}
# acsshells |> 
#   filter(table=="B15002", year==2021) |> 
#   select(table, title, universe) |> 
#   distinct()

```





```{r}
#| label: acs5-vars
#| eval: false
#| include: false

# get 5-year acs variables
vacs2009 <- load_variables(2009, "acs5", cache = TRUE)
vacs2011 <- load_variables(2011, "acs5", cache = TRUE)
vacs2014 <- load_variables(2014, "acs5", cache = TRUE)
vacs2016 <- load_variables(2016, "acs5", cache = TRUE)
vacs2018 <- load_variables(2018, "acs5", cache = TRUE)
vacs2019 <- load_variables(2019, "acs5", cache = TRUE)
vacs2021 <- load_variables(2021, "acs5", cache = TRUE)
vacs1 <- 
  bind_rows(vacs2009 %>% mutate(endyear=2009),
            vacs2011 %>% mutate(endyear=2011),
            vacs2014 %>% mutate(endyear=2014),
            vacs2016 %>% mutate(endyear=2016),
            vacs2018 %>% mutate(endyear=2018),
            vacs2019 %>% mutate(endyear=2019),
            vacs2021 %>% mutate(endyear=2021))

vacs <- vacs1 |> 
  rename(variable=name) |>
  mutate(table=str_extract_before_first(variable, "_"),
         slabel=str_extract_after_last(label, "!!") |> 
           str_to_lower() |> 
           str_remove(":")) |> 
  arrange(endyear, table, variable) |> 
  group_by(endyear, table) |>
  mutate(rownum=row_number()) |> 
  ungroup()

count(vacs, endyear)

saveRDS(vacs, here::here("data", "acs", "vacs.rds"))

vacs <- readRDS(here::here("data", "acs", "vacs.rds"))


s <- "education"
s <- "population"
tmp <- vacs |> 
  select(table, concept) |> 
  filter(str_detect(concept, coll(s, ignore_case=TRUE))) |> 
  distinct()

tmp <- vacs |> 
  filter(str_detect(label, coll("education", ignore_case=TRUE)))

tmp <- vacs |> 
  filter(str_detect(label, coll("bachelor", ignore_case=TRUE)))

tmp <- vacs |> 
  filter(str_detect(label, coll("bachelor", ignore_case=TRUE)))


```

```{r}
#| label: load-basic-data
#| eval: true
#| include: false

# xwalkny <- readRDS(here::here("data", "xwalkny_acs.rds"))
data(xwalkny)
data(geometry)

```


```{r}
#| label: constants
#| eval: true
#| include: false

# key counties
# 36091 Saratoga
# 36113 Warren
# 36115 Washington

# key cousubs
# 3611511836 Cambridge town
# 3611530686 Greenwich town
# 3611564782 Salem town
# 3611581578 White Creek town
tmp <- c("3611511836", "3611530686", "3611581578")

# key places
# 3602550 Argyle village
# 3611825 Cambridge village
# 3630675 Greenwich village
# 3664771 Salem CDP
# 3665750 Schuylerville

# school district
# 3606210    Cambridge Central School District
# 3612900    Greenwich Central School District
# 3625470    Salem Central School District


# this is wrong!
# 9700000US3602550    3602550    NY     NA     schdist   NA                Alden Central Schoâ€¦ 
# 3602550    Alden Central School District ????
badgeos <- "9700000US3602550" # filter this out before getting what we want!!
check <- xwalkny |> 
  filter(geoid=="3602550")

# # look for geoids
# xwalkny |>
#   filter(geotype=="place") |> 
#   select(geoid, geoname, fullname, namelsad) |> 
#   arrange(geoid)
# 
# xwalkny |> 
#   as_tibble() |> # needed so that we can drop geometry
#   filter(str_detect(fullname, coll("Salem", ignore_case=TRUE))) |> 
#   select(geoid, geotype, geoname, fullname, namelsad) |> 
#   arrange(geoid)


# areas of interest
state_aoi <- c("36")
cnty_aoi <- c("36091", "36113", "36115")
vlg_aoi <- c("3602550", "3611825", "3630675", "3664771", "3665750") 
twn_aoi <- c("3611511836", "3611530686", "3611581578")
aoi <- c(state_aoi, cnty_aoi, vlg_aoi, twn_aoi)

```


```{r}
#| label: load-table-data
#| eval: true
#| include: false


# B15002 <- readRDS(here::here("data", "B15002_2021"))


```


# Who lives here?

## Age

```{r}
tmp <- findtab("age")
tmp |> 
  filter(universe=="Total population")

acsshells |> 
  filter(table=="B01001", year==2021) |> 
  select(table, line, variable, label)


```


## Education

```{r}
#| label: ed-data
#| eval: true
#| include: false

# vacs <- readRDS(here::here("data", "vacs.rds"))
# b15002 <- readRDS(here::here("data", "B15002_2021.rds"))
# count(b15002, geotype)

# B15002 SEX BY EDUCATIONAL ATTAINMENT FOR THE POPULATION 25 YEARS AND OVER
# B15003 EDUCATIONAL ATTAINMENT FOR THE POPULATION 25 YEARS AND OVER
# edvacs <- acsvars |> 
#   filter(table=="B15002", endyear==2021) |>
#   mutate(gender=case_when(
#     str_detect(label, "Male") ~ "male",
#     str_detect(label, "Female") ~ "female",
#     label=="Estimate!!Total:" ~ "all",
#     TRUE ~ "ERROR"))

# b15002 <- read_tabny("b15002") |> 
#   select(-contains("_M")) |> 
#   mutate(geoid=str_sub(GEO_ID, 10, -1)) |> 
#   pivot_longer(cols=starts_with("B15002"),
#                names_to = "variable",
#                values_to = "estimate") |> 
#   mutate(variable=str_replace(variable, "_E", "_"))

b15002 <- readRDS(here::here("data", "acs", "B15002_2021.rds"))

edvacs1 <- b15002 |> 
  select(variable, line, label) |> 
  distinct()
edvacs1

edvacs <- edvacs1 |> 
  mutate(gender=case_when(
    line == 1 ~ "all",
    line %in% 2:18 ~ "male",
    line %in% 19:35 ~ "female",
    TRUE ~ "ERROR"),
    slabel=case_when(
    line == 1 ~ "all",
    line == 2 ~ "male-all",
    line == 19 ~ "female-all",
    line %in% c(3:10, 20:27) ~ "lths",
    line %in% c(11:13, 28:30) ~ "hs",
    line %in% c(14, 31) ~ "aa",
    line %in% c(15, 32) ~ "ba",
    line %in% c(16:18, 33:35) ~ "maplus",
    TRUE ~ "ERROR"))
edvacs
count(edvacs, gender)
count(edvacs, slabel)

df1 <- b15002 |> 
  left_join(edvacs |>
              select(variable, line, gender, slabel),
            by = join_by(variable))
count(df1, slabel)  
count(df1, geotype)


df2 <- df1 |> 
  summarise(estimate=sum(estimate),
            .by=c(affgeoid, geoid, stabbr, county, nygeotype, countyname, shortname, shortestname, slabel)) |> 
  pivot_wider(names_from = slabel, values_from = estimate) |> 
  mutate(ltaapct=(lths + hs) / all,
         aapct=aa / all, 
         bapct=ba / all, 
         mapluspct=maplus / all) |> 
  rename(universe=all)

df3 <- df2 |> 
  select(affgeoid, geoid, stabbr, county, nygeotype, countyname, shortname, shortestname, contains("pct"), universe) |> 
  arrange(desc(ltaapct)) |> 
  mutate(rank=row_number(), n=n())


```

```{r}
#| label: ed-table
#| eval: true
#| include: true

# nyr <- expression(GEO_ID=="0400043US36")
# washco <- expression(STUSAB=="NY" & COUNTY=="115" & nygeotype=="county")
# villages <- expression(STUSAB=="NY" & COUNTY=="115" & nygeotype=="village")
# aoi <- expression(eval(nyr) | eval(washco) | eval(villages))

acstables |> filter(table=="B15002")
acsshells |> 
  filter(table=="B15002", year==2021) |> 
  select(table, title, universe) |> 
  distinct()


tabdata <- df3 |>
  filter(!affgeoid %in% badgeos) |> 
  filter(geoid %in% aoi) |> 
  mutate(baplus=bapct + mapluspct,
         tablename=str_to_title(shortname) |>
           str_replace("Cdp", "CDP"),
         tablename=case_when(nygeotype=="state" & shortname=="New York" ~ "New York State",
                             TRUE ~ tablename)) |> 
  relocate(baplus, .before=universe) |> 
  arrange(desc(baplus))

tabdata |> 
  select(-geoid, -stabbr, -county, -n, -rank) 

tab <- tabdata |> 
  select(tablename, baplus) |> 
  gt() |> 
  tab_header(
    title = "Percentage of population age 25+ with BA or higher"
  ) |> 
  cols_label(tablename="Area",
             # countyname = "County",
             baplus="% with BA+") |> 
  fmt_percent(columns=baplus, decimals=1) |>
  tab_source_note(source_note="Source: 5-year ACS ending 2021")

  
tab  



```

# Trends and Outlook

# Implications for Economic Development

------------------------------------------------------------------------

<!-- ![](images/budget_actors.png) -->

something here



```{=html}
<!--

Rendering:

# quarto render
# quarto render index.qmd --to html
# quarto render index.qmd --to pdf


Publishing to the web:

quarto publish netlify index.qmd
quarto publish netlify index.qmd --no-render --no-browser --no-prompt
quarto publish netlify index.qmd --no-browser --no-prompt

https://boyd-cambridge.netlify.app

The <dd> tag is used to describe a term/name in a description list.

The <dd> tag is used in conjunction with <dl> (defines a description list) and <dt> (defines terms/names).

Inside a <dd> tag you can put paragraphs, line breaks, images, links, lists, etc.

Document font size - see process for live review
https://www.youtube.com/watch?v=yAlhq8yhLsw

 {.smaller}

-->
```



```{r}
#| label: CAUTION-ONETIME-acs-tables
#| eval: false
#| include: false

tabnames <- c("B01001", "B01002", "B01003", "B07001", "B07009", "B07409", "B15002", "B15003", "B25071")

f <- function(tabname){
  df <- get_enhanced(tabname)
  outname <- paste0(tabname, "_2021.rds")
  saveRDS(df, here::here("data", "acs", outname))
}

purrr::map(tabnames, f)

```


