
```{r}
#| output: false
#| eval: true

source(here::here("slides", "setup.R"))

# get data ----
# acs_data <- readRDS(fs::path(ddir, "acs_data.rds"))
pop <- readRDS(fs::path(ddir, "population", "county_population.rds"))
placepop <- readRDS(fs::path(popdir, "popests_raw.rds"))

```


## Demographics: Population trends

### County fortunes have differed widely over last half-century

```{r}
#| label: population-levels

counties <- c("36083", "36091", "36113", "36115")

capt <-  "\nSource: U.S. Census Bureau and NYS Department of Labor"

pop |> 
  filter(geoid %in% counties) |>
  mutate(ipop=pop / pop[year==2015],
         cpcpop = ipop * 100 - 100,
         .by=geoid) |>
  ggplot(aes(x=year, y=pop / 1000)) +
  geom_line(colour = "blue", linewidth = 1) +
  scale_x_continuous(name = NULL, breaks = seq(1900, 2025, 5)) +
  scale_y_continuous(name = "Thousands of people") +
  ggtitle(label="Population in area counties") +
  labs(caption = capt) +
  theme_minimal() +
  legend_notitle +
  caption_left +
  facet_wrap(~trimname, scales="free_y")

```


### Population declines in Washington County have been persistent and severe

```{r}
#| label: population-changes

counties <- c("36083", "36091", "36113", "36115")

capt1 <-  "Source: U.S. Census Bureau and NYS Department of Labor"
capt2 <- "Note: Bump in 2020 reflects 2020 decennal census break from prior estimates"
capt <- paste0("\n", capt1, "\n", capt2)

baseyear <- 2010
pop |> 
  filter(geoid %in% counties) |>
  mutate(ipop=pop / pop[year==baseyear],
         cpcpop = ipop * 100 - 100,
         .by=geoid) |>
  filter(year >= baseyear) |>
  ggplot(aes(x=year, y=cpcpop, colour=trimname)) +
  geom_line(linewidth = 1) +
  geom_hline(yintercept = 0, linetype="solid", linewidth = .5) +
  scale_x_continuous(name = NULL, breaks = seq(baseyear, 2025, 1)) +
  scale_y_continuous(name = "Cumulative percentage change",
                     breaks =  seq(-20, 20, 1),
                     labels=scales::comma_format()) +
  ggtitle(label=paste0("Cumulative percentage change in population since ", baseyear)) +
  labs(caption = capt) +
  theme_minimal() +
  legend_notitle +
  caption_left

```


### Population declines in most area villages have been sharp

```{r}
#| output: false
#| eval: true

# add Salem CDP 
baseyear <- 2010

suppressWarnings( # Salem has fewer observations than others, generating warning
  pdata <- placepop |> 
  rename(trimname=name, pop=value) |> 
  filter(state=="36", sumlev=="157") |>  
  mutate(geoid = paste0(state, place)) |> 
  filter(geoid %in% constants$keep_places) |>
  mutate(trimname=ifelse(place=="64771", paste0(trimname, "/CDP"), trimname)) |> 
  add_row(geoid="3664771", state="36", stname="New York", county="115",
          place="64771", trimname="Salem village/CDP", year=2020, src="2020 census", pop=811) |>
  mutate(ipop=pop / pop[year==baseyear],
         cpcpop = ipop * 100 - 100,
         .by=geoid) |>
  arrange(geoid, year)
)
  

```

```{r}
#| label: village-population
#| output: true

capt1 <-  "Source: U.S. Census Bureau. Annual population estimates may not be reliable for small areas such as villages."
capt2 <- "Note: Annual estimates for Salem not easily available after 2010 due to dissolution; 2020 value is decennial census."
capt <- paste0("\n", capt1, "\n", capt2)

pdata |> 
  ggplot(aes(x=year, y=pop)) +
  geom_line(data = pdata  |>  
              filter(!(geoid=="3664771" & year > 2010)),
            colour="blue",
            linewidth = 1,
            linetype="solid") +
  geom_line(data = pdata |> 
              filter(geoid=="3664771", year >= 2010), 
            colour="blue",
            linewidth = 1,
            linetype = "dashed") + # dashed line for Salem
  scale_x_continuous(name = NULL, breaks = seq(1900, 2025, 5)) +
  scale_y_continuous(name = "Number of people") +
  ggtitle(label="Population in area villages") +
  labs(caption = capt) +
  theme_minimal() +
  legend_notitle +
  caption_left +
  facet_wrap(~trimname, scales="free_y", ncol=3)

```


:::{.notes}
Unfortunately the Census Bureau has removed annual population data after 2010 from their website as a result of the village dissolution, which occurred in 2016.
:::

### Cambridge village's population loss has not been as severe as most other area villages

```{r}
#| label: village-population-changes

capt1 <-  "Source: U.S. Census Bureau. Annual population estimates may not be reliable for small areas such as villages."
capt2 <- "Note: Annual estimates for Salem not easily available after 2010 due to dissolution; 2020 value is decennial census."
capt <- paste0("\n", capt1, "\n", capt2)

pdata2 <- pdata |> 
  filter(year >= baseyear)

pdata2 |>
  ggplot(aes(x=year, y=cpcpop, colour=trimname)) +
  geom_line(data = pdata2  |>  
              filter(!(geoid=="3664771")),
            linewidth = 1,
            linetype="solid") +
  geom_line(data = pdata2 |> 
              filter(geoid=="3664771"), 
            linewidth = 1,
            linetype = "dashed") + # dashed line for Salem  
  geom_hline(yintercept = 0, linetype="solid", linewidth = .5) +
  scale_x_continuous(name = NULL, breaks = seq(baseyear, 2025, 1)) +
  scale_y_continuous(name = "Cumulative percentage change",
                     breaks =  seq(-20, 20, 1),
                     labels=scales::comma_format()) +
  ggtitle(label=paste0("Cumulative percentage change in population since ", baseyear)) +
  labs(caption = capt) +
  theme_minimal() +
  legend_notitle +
  caption_left

```


### Child poverty

```{r}
#| output: false
#| eval: false

# https://www2.census.gov/programs-surveys/saipe/datasets/1999/1999-school-districts/ussd99.dat
# https://www2.census.gov/programs-surveys/saipe/datasets/2000/2000-school-districts/ussd00.dat
# https://www2.census.gov/programs-surveys/saipe/datasets/2001/2001-school-districts/ussd01.dat
# https://www2.census.gov/programs-surveys/saipe/datasets/2002/2002-school-districts/ussd02.dat
# https://www2.census.gov/programs-surveys/saipe/datasets/2003/2003-school-districts/ussd03.txt
# https://www2.census.gov/programs-surveys/saipe/datasets/2004/2004-school-districts/ussd04.txt
# https://www2.census.gov/programs-surveys/saipe/datasets/2005/2005-school-districts/ussd05.txt
# https://www2.census.gov/programs-surveys/saipe/datasets/2023/2023-school-districts/ussd23.txt
 
urlbase <- "https://www2.census.gov/programs-surveys/saipe/datasets/"
f <- function(year){
  ext <- ifelse(year < 2003, ".dat", ".txt")
  y2 <- str_sub(year, 3, 4)
  url <- paste0(urlbase, year, "/", year, "-school-districts/ussd", y2, ext)
  fname <- fs::path_file(url)
  print(fname)
  download.file(url, fs::path(ddir, "saipe", fname), mode="wb")
}
purrr::walk(1999:2023, f) 

sdir <- fs::path(ddir, "saipe")
files <- fs::dir_ls(sdir) |> str_subset("ussd.*\\.(dat|txt)$") |> sort()

# starts <- c(1, 4, 10, 83, 92, 101, 110)
# ends <- c(2, 8, 81, 90, 99, 108, 130)
# cnames <- c("stfips", "distid", "distname", "totpop", "childpop", "childpoverty", "tag")

starts <- c(1, 4, 10)
ends <- c(2, 8, 130)
cnames <- c("stfips", "distid", "restofrec")
df <- vroom_fwf(files,
                id = "id",
                col_positions = fwf_positions(start=starts, end=ends,
                col_names=cnames))
count(df, id)

df2 <- df |> 
  mutate(y2=str_sub(id, -6, -5),
         year = case_when(y2 > 25 ~ paste0("19", y2),
                          .default = paste0("20", y2)),
         year = as.integer(year)) |> 
  select(-y2, -id) |> 
  relocate(year) |> 
  arrange(stfips, distid, year)

vec <- df2$restofrec[1:99999]
vec <- df2$restofrec[1:200e3]

vec <- as.vector(df2$restofrec[1:100000])

vec <- df2$restofrec[1:nrow(df2)] # 340214

vec <- df2 |> 
  mutate(restofrec = str_trim(restofrec)) |> 
  pull(restofrec)

df3 <- df2 |> 
  mutate(rr2 = str_remove(restofrec, "(?i)ussd.*$") |> str_trim()) |> 
  separate(rr2, into = c("sdname", "numeric_fields"), sep = "\\s+", fill = "right", remove=FALSE)

test <- df3 |> 
  filter(year==2020, stfips=="55", distid=="15090") |>  
  separate(
    rr2,
    into = c("name", "numbers_part"),
    sep = "\\s+(?=\\d)",  # Split at whitespace followed by a digit
    extra = "merge",       # Merge any remaining splits into 'numbers_part'
    remove=FALSE
  )  |> 
  select(rr2, name, numbers_part) 

# Assuming your data frame is named df and the column is 'text'
df_result <- df3  |> 
  slice_sample(n=50) |> 
  # select(-restofrec) |> 
  separate(
    rr2,
    into = c("name", "numbers_part"),
    sep = "\\s+(?=\\d)",  # Split at whitespace followed by a digit
    extra = "merge"       # Merge any remaining splits into 'numbers_part'
  )  |> 
  mutate(name = str_trim(name)) %>%  # Trim whitespace from the name
  separate(
    numbers_part,
    into = sprintf("num%d", 1:5),    # Create columns num1 to num5
    sep = "\\s+",                    # Split numbers by whitespace
    fill = "right",                  # Fill missing with NA on the right
    convert = TRUE                   # Convert to numeric
  )

# View the result
# good i think
set.seed(1234)
df_result <- df3  |> 
  # filter(year==2020, stfips=="55", distid=="15090") |>  
  # slice_sample(n=100000) |> 
  mutate(
    # Extract the trailing numeric block (last occurrence of digits)
    numbers_part = str_extract(rr2, "\\d[\\d\\s]*$"),
    # Remove the numeric block from the original text to isolate the name
    name = str_remove(rr2, "\\s*\\d[\\d\\s]*$") %>% str_trim()
  ) %>%
  separate(
    numbers_part,
    into = sprintf("num%d", 1:5),
    sep = "\\s+",
    fill = "right",
    convert = TRUE,
    remove = FALSE
  )

summary(df_result)
saveRDS(df_result, fs::path(ddir, "sd_saipe.rds"))







set.seed(1234)
ints <- sample(340214, 10)
vec <- df3$rr2[ints]








vec <- c("Springfield School District 123 456 789",
         "Oak Grove Elementary 42",
         "abc School District 123 456 789 555",
         "Westfield High 7 14",
         "Maple3wood Academy",
         "Central City Schools")





vec2 <- str_remove(vec[1:1000], "(?i)ussd.*$")

vec <- c("Springfield School District 123 456 789",
         "Oak Grove Elementary 42",
         "abc School District 123 456 789 555",
         "Westfield High 7 14",
         "Maple3wood Academy",
         "Central City Schools")

pattern <- "^(.*?)(\\d+(?:\\s+\\d+)*?)\\s+(\\S+)\\s+(\\S+)$"

preprocessed_data <- str_trim(str_remove(vec, "(?i)ussd.*$"))

# Split into sdname and numeric pieces
split_data <- str_match(preprocessed_data, "^(.*?)(\\d+(?:\\s+\\d+)*)$")

result_df <- data.frame(
  sdname = str_trim(split_data[,2]),
  numeric_values = split_data[,3]
)
result_df

# Split numeric values into separate columns
result_df <- cbind(result_df, 
                   setNames(data.frame(str_split_fixed(result_df$numeric_values, "\\s+", 3)), 
                            c("num1", "num2", "num3")))





# Extract components using str_match
vec2 <- str_remove(vec, "(?i)ussd.*$")
result <- str_match(vec2, pattern)
result

# Process the numeric fields dynamically
df <- tibble(
    rec = result[,1],
    sdname = str_trim(result[,2]),
    numeric_fields = result[,3],
    file = result[,4],
    date = result[,5])  |> 
  separate_wider_delim(numeric_fields, names = str_c("num", 1:6), delim = " ", too_few = "align_start", too_many = "debug") |>
    mutate(numeric_fields = str_split(numeric_fields, "\\s+")) %>%
    unnest_wider(numeric_fields, names_sep = "_")

# delim = "\\s+"
# "\\s+"
tmp <- df2 |> 
  mutate(dist = str_detect(restofrec, coll("distric", ignore_case=TRUE)),
         school = str_detect(restofrec, coll("school", ignore_case=TRUE))) |> 
  filter(!(dist | school))

vec <- df2$restofrec[1:10]

vec <- c("Springfield School District 123 456 789",
         "Oak Grove Elementary 42",
         "abc School District 123 456 789 555",
         "Westfield High 7 14",
         "Maple3wood Academy",
         "Central City Schools")

# Define the pattern to match
pattern <- "^(.*?)(?: (\\d+))?(?: (\\d+))?(?: (\\d+))?$"
# pattern <- "^(.*?)(?: (\\d+))?(?: (\\d+))?(?: (\\d+))?(?: (\\d+))?$"

# Extract components using str_match
result <- str_match(vec, pattern)
result

df <- tibble(
  sdname = result[,2],
  num1 = result[,3],
  num2 = result[,4],
  num3 = result[,5],
  num4 = result[,6]
  )
df

df <- tibble(
  sdname = result[,2],
  num1 = result[,3],
  num2 = result[,4],
  num3 = result[,5],
  num4 = result[,6]
  )
df

# Create a data frame with the extracted components
df <- data.frame(
  sdname = result[,2],
  num1 = result[,3],
  num2 = result[,4],
  num3 = result[,5]
)


df2 <- df |> 
  select(-c(tag)) |> 
  mutate(y2=str_sub(id, -6, -5),
         year = case_when(y2 > 25 ~ paste0("19", y2),
                          .default = paste0("20", y2)),
         year = as.integer(year))
count(df2, year)
# povrate = childpoverty / childpop * 100
# 
check <- df2 |> 
  filter(stfips == "36", distid=="06210")

# E:\R_projects\projects\cambridge\data\saipe
# ussd23.txt
#           1- 2       FIPS State code (00 for US record)
        #   4- 8       District ID
        #  10-81       District Name
        #  83-90       Total Population 
        #  92-99       Population of Relevant Children 5 to 17 years of Age
        # 101-108      Estimated Number of Relevant Children 5 to 17 years old
        #              in Poverty Related to the Householder 
        # 110-130      A tag indicating the file name and date of creation

starts <- c(1, 4, 10, 83, 92, 101, 110)
ends <- c(2, 8, 81, 90, 99, 108, 130)
cnames <- c("stfips", "distid", "distname", "totpop", "childpop", "childpoverty", "tag")
fpath <- fs::path(ddir, "saipe", "ussd23.txt")

df <- vroom_fwf(fpath, 
                col_positions = fwf_positions(start=starts, end=ends, 
                col_names=cnames)) |> 
  select(-c(tag)) |> 
  mutate(povrate = childpoverty / childpop * 100)

check <- df |> 
  filter(stfips == "36")

# argyle 03210
# cambridge 06210
# greenwich 12900
# salem 25470
# schuylerville 26160
# hoosick falls 14760
 
keep_sds <- c("03210", "06210", "12900", "25470", "26160", "14760")

pdata <- df |> 
  filter(stfips == "36", distid %in% keep_sds) |> 
  mutate(trimname=case_when(distid=="06210" ~ "Cambridge",
                            distid=="03210" ~ "Argyle",
                            distid=="12900" ~ "Greenwich",
                            distid=="25470" ~ "Salem",
                            distid=="26160" ~ "Schuylerville",
                            distid=="14760" ~ "Hoosick Falls")) |> 
  arrange(distid)


```

