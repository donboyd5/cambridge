{"title":"Demographics","markdown":{"yaml":{"editor_options":{"chunk_output_type":"console"}},"headingText":"Demographics","containsRefs":false,"markdown":"\n\n\n<!-- Notes to self: I use the R package censusapi, rather than tidycensus, because it gives more control over access to Census data, and it allows me to obtain full Census geocodes (usually called GEO_ID).\n\nRun prep_geocodes.R before starting this.\n\n-->\n\n\n```{r includes}\n#| label: includes\n#| eval: true\n#| include: false\n\nsource(here::here(\"r\", \"libraries.r\"))\nsource(here::here(\"r\", \"functions.r\"))\nsessioninfo::session_info()\n\n# https://sessioninfo.r-lib.org/\n\ndacs <- here::here(\"acs\")\n\n\n```\n\n```{r}\n#| label: get-codes\n\nv2022 <- readRDS(path(dacs, \"vars_acs2022.rds\"))\ngeo2022 <- readRDS(path(dacs, \"geocoded_acs2022.rds\"))\n\n```\n\n\n```{r}\n\n\n\n```\n\n\n```{r}\n\n# sumlevel\n# https://mcdc.missouri.edu/geography/sumlevs/\n# https://mcdc.missouri.edu/geography/sumlevs/sumlev-master-list.csv\n# 010: Nation The whole United States, including Puerto Rico and the U.S. Pacific Islands. GeoID: 01000US\n# 020: Region One of four large statistical groups of U.S. states and the District of Columbia (map). Example: Midwest Region (02000US2)\n# 030: Division One of nine statistical subdivisions of regions, about four to eight states each (map). Example: Mountain Division, part of West Region (03000US8)\n# 040: State One of the 50 U.S. states, Puerto Rico, and the District of Columbia. Example: Missouri (04000US29)\n# 050: County U.S. county or county equivalent. Example: Boone County, MO (05000US29019)\n# 060: Minor Civil Division (MCD) An administrative or legal division of a county, such as township or precinct. Not all states or counties have MCDs. Example: Galena township, Jasper County, MO (06000US2909726236)\n# 160: Place Loosely defined, any concentration of population. In practice, places include incorporated cities, towns and villages (legal entities) and Census Designated Places (populated areas that lack separate government, but are useful for statistical purposes). Example: Alba city, MO (16000US2900496)\n# 170\tConsolidated City\t\n# 400\tUrban Area\n# 410\tUrban Area-State\n# 420\tState-Urban Area\n# 430\tUrban Area-State-County\n\n\nget_acsfile <- function(tab){\n\n  ussumlevs <- c(\"010\", \"040\")\n  # nysumlevs <- c(\"050\", \"060\", \"160\", \"170\", \"400\", \"410\", \"430\")\n  nysumlevs <- c(\"050\", \"060\", \"160\", \"170\")\n  urbanrural <- c(\"0400001US36\", \"0400043US36\")\n  \n  xdacs <- r\"(E:\\data\\acs\\sf\\2022_5year)\"\n  zpath <- fs::path(xdacs, \"5YRData.zip\")\n  str_sub(tab, 1, 1) <- str_to_lower(str_sub(tab, 1, 1))\n  fname <- paste0(\"acsdt5y2022-\", tab, \".dat\")\n  # zsub <- path(r\"(data\\prt01\\prod\\sumfile_new\\output\\2021\\5YRData)\", fname)\n  \n  # df1 <- vroom(unz(zpath, fname)) |>  # vroom(unz(zpath, zsub)) for 2021\n  #   filter(str_sub(GEO_ID, 1, 3) %in% ussumlevs |\n  #            (str_sub(GEO_ID, 10, 11)==\"36\" &  \n  #               str_sub(GEO_ID, 1, 3) %in% nysumlevs) |\n  #            GEO_ID %in% urbanrural)\n  \n  df1 <- vroom(unz(zpath, fname))\n  \n  return(df1)\n}\n\n```\n\n\n```{r}\n# https://www.census.gov/programs-surveys/acs/data/summary-file.html\n\n\ntabnames <- c(\"B01001\", \"B01002\", \"B01003\", \"B07001\", \"B07009\", \"B07409\", \"B15003\", \"B25071\")\n\nsystem.time(df1 <- get_acsfile(tabnames[2]))\n\ndf2 <- df1 |> \n  lcnames()\n\ntmp <- df2 |> filter(str_detect(geo_id, \"US36\"))\n\ngeo2022 |> filter(geo_id==\"0600000US3600354523\")\n\ndf3 <- geo2022 |> \n  select(geo_id, stabbr, name, geotype, state, county, cousub, place, sumlevel, b01003_001e) |> \n  left_join(df2, by = join_by(geo_id)) |> \n  filter(b01002_e001 >= 0)\n\n\n```\n\n\n\n```{r constants}\n#| label: constants\n#| eval: true\n#| include: false\n\n# key counties\n# 36091 Saratoga\n# 36113 Warren\n# 36115 Washington\n\n# key cousubs\n# 3611511836 Cambridge town\n# 3611530686 Greenwich town\n# 3611564782 Salem town\n# 3611581578 White Creek town\n# tmp <- c(\"3611511836\", \"3611530686\", \"3611581578\")\n\n# key places\n# 3602550 Argyle village\n# 3611825 Cambridge village\n# 3630675 Greenwich village\n# 3664771 Salem CDP\n# 3665750 Schuylerville\n\n# school district\n# 3606210    Cambridge Central School District\n# 3612900    Greenwich Central School District\n# 3625470    Salem Central School District\n\n# areas of interest\n# use full affgeoid rather than shortened geoid avoids getting Alden school district for Argyle village\n# geoid 3602550 which is the same as Argyle village\nstate_aoi <- c(\"0400000US36\")\ncnty_aoi <- c(\"0500000US36091\", \"0500000US36113\", \"0500000US36115\")\nvlg_aoi <- c(\"1600000US3602550\", \"1600000US3611825\", \"1600000US3630675\", \"1600000US3664771\", \"1600000US3665750\") \ntwn_aoi <- c(\"0600000US3611511836\", \"0600000US3611530686\", \"0600000US3611581578\")\n              \ntmp <- geo2022 |> filter(stabbr==\"NY\" & county==\"115\")\n\naoi <- c(state_aoi, cnty_aoi, vlg_aoi, twn_aoi)\n\n\naoi <- geo2022 |> \n  filter(stabbr==\"NY\",\n         geotype==\"state\" |\n           geotype==\"county\" & county %in% c(\"091\", \"113\", \"115\") |\n           geotype==\"cousub\" & geo_id %in% twn_aoi |\n           geotype==\"place\" & geo_id %in% vlg_aoi) |> \n  select(geo_id, sumlevel, stabbr, name, geotype, state, county, cousub, place, b01003_001e)\n\n```\n\n\n```{r}\n#| label: tables-of-interest\n\nv2022 |> filter(str_detect(concept, \"Age\"))\nv2022 |> filter(str_detect(name, \"B02001\"))\nv2022 |> filter(group==\"B01002\") # median age B01002_001E\n\nv2022 |> filter(str_detect(concept, \"Race\"))\nv2022 |> filter(str_detect(name, \"B02001\"))\n\n\n\n\n\n```\n\n```{r}\n#| label: get-full-geo\n\nacstab <- \"B01003\"\nyear <- 2022\n\ngnation <- get_acs(geography = \"us\",\n                  table = acstab,\n                  year=year,\n                  survey=\"acs5\",\n                  state=NULL,\n                  geometry = TRUE,\n                  keep_geo_vars = TRUE,  # TRUE only works if we set geometry=TRUE\n                  cache_table = TRUE) \n\n```\n\n\n## Age\n```{r}\n# B02001 median age\n\nacstab <- \"B02001\"\nyear <- 2022\n\nv2022 |> filter(str_detect(name, \"B02001\"))\n\nnation <- get_acs(geography = \"us\",\n                  table = acstab,\n                  year=year,\n                  survey=\"acs5\",\n                  state=NULL,\n                  geometry = FALSE,\n                  keep_geo_vars = FALSE,  # TRUE only works if we set geometry=TRUE\n                  cache_table = TRUE) |>\n    mutate(geotype=\"nation\")\n\nstate <- get_acs(geography = \"state\",\n                 table = acstab,\n                 year=year,\n                 survey=\"acs5\",\n                 state=c(\"NY\", \"VT\"),\n                 geometry = FALSE,\n                 keep_geo_vars = FALSE,  # TRUE only works if we set geometry=TRUE\n                 cache_table = TRUE) |>\n    mutate(geotype=\"state\")\n\ncounty <- get_acs(geography = \"county\",\n                 table = acstab,\n                 year=year,\n                 survey=\"acs5\",\n                 state=c(\"NY\", \"VT\"),\n                 geometry = FALSE,\n                 keep_geo_vars = FALSE,  # TRUE only works if we set geometry=TRUE\n                 cache_table = TRUE) |>\n    mutate(geotype=\"county\")\n\ncousubs <- get_acs(geography=\"county subdivision\",\n                   table=acstab,\n                   year=year,\n                   state=\"NY\",\n                   # county=cosubs_county,\n                   geometry = FALSE,\n                   keep_geo_vars = FALSE,\n                   cache_table = TRUE\n                   ) |>\n  mutate(geotype=\"cousub\")\n\n\nget_acs(\n  geography,\n  variables = NULL,\n  table = NULL,\n  cache_table = FALSE,\n  year = 2021,\n  output = \"tidy\",\n  state = NULL,\n  county = NULL,\n  zcta = NULL,\n  geometry = FALSE,\n  keep_geo_vars = FALSE,\n  shift_geo = FALSE,\n  summary_var = NULL,\n  key = NULL,\n  moe_level = 90,\n  survey = \"acs5\",\n  show_call = FALSE,\n  ...\n)\n\n\n\n```\n\n","srcMarkdownNoYaml":"\n\n# Demographics\n\n<!-- Notes to self: I use the R package censusapi, rather than tidycensus, because it gives more control over access to Census data, and it allows me to obtain full Census geocodes (usually called GEO_ID).\n\nRun prep_geocodes.R before starting this.\n\n-->\n\n\n```{r includes}\n#| label: includes\n#| eval: true\n#| include: false\n\nsource(here::here(\"r\", \"libraries.r\"))\nsource(here::here(\"r\", \"functions.r\"))\nsessioninfo::session_info()\n\n# https://sessioninfo.r-lib.org/\n\ndacs <- here::here(\"acs\")\n\n\n```\n\n```{r}\n#| label: get-codes\n\nv2022 <- readRDS(path(dacs, \"vars_acs2022.rds\"))\ngeo2022 <- readRDS(path(dacs, \"geocoded_acs2022.rds\"))\n\n```\n\n\n```{r}\n\n\n\n```\n\n\n```{r}\n\n# sumlevel\n# https://mcdc.missouri.edu/geography/sumlevs/\n# https://mcdc.missouri.edu/geography/sumlevs/sumlev-master-list.csv\n# 010: Nation The whole United States, including Puerto Rico and the U.S. Pacific Islands. GeoID: 01000US\n# 020: Region One of four large statistical groups of U.S. states and the District of Columbia (map). Example: Midwest Region (02000US2)\n# 030: Division One of nine statistical subdivisions of regions, about four to eight states each (map). Example: Mountain Division, part of West Region (03000US8)\n# 040: State One of the 50 U.S. states, Puerto Rico, and the District of Columbia. Example: Missouri (04000US29)\n# 050: County U.S. county or county equivalent. Example: Boone County, MO (05000US29019)\n# 060: Minor Civil Division (MCD) An administrative or legal division of a county, such as township or precinct. Not all states or counties have MCDs. Example: Galena township, Jasper County, MO (06000US2909726236)\n# 160: Place Loosely defined, any concentration of population. In practice, places include incorporated cities, towns and villages (legal entities) and Census Designated Places (populated areas that lack separate government, but are useful for statistical purposes). Example: Alba city, MO (16000US2900496)\n# 170\tConsolidated City\t\n# 400\tUrban Area\n# 410\tUrban Area-State\n# 420\tState-Urban Area\n# 430\tUrban Area-State-County\n\n\nget_acsfile <- function(tab){\n\n  ussumlevs <- c(\"010\", \"040\")\n  # nysumlevs <- c(\"050\", \"060\", \"160\", \"170\", \"400\", \"410\", \"430\")\n  nysumlevs <- c(\"050\", \"060\", \"160\", \"170\")\n  urbanrural <- c(\"0400001US36\", \"0400043US36\")\n  \n  xdacs <- r\"(E:\\data\\acs\\sf\\2022_5year)\"\n  zpath <- fs::path(xdacs, \"5YRData.zip\")\n  str_sub(tab, 1, 1) <- str_to_lower(str_sub(tab, 1, 1))\n  fname <- paste0(\"acsdt5y2022-\", tab, \".dat\")\n  # zsub <- path(r\"(data\\prt01\\prod\\sumfile_new\\output\\2021\\5YRData)\", fname)\n  \n  # df1 <- vroom(unz(zpath, fname)) |>  # vroom(unz(zpath, zsub)) for 2021\n  #   filter(str_sub(GEO_ID, 1, 3) %in% ussumlevs |\n  #            (str_sub(GEO_ID, 10, 11)==\"36\" &  \n  #               str_sub(GEO_ID, 1, 3) %in% nysumlevs) |\n  #            GEO_ID %in% urbanrural)\n  \n  df1 <- vroom(unz(zpath, fname))\n  \n  return(df1)\n}\n\n```\n\n\n```{r}\n# https://www.census.gov/programs-surveys/acs/data/summary-file.html\n\n\ntabnames <- c(\"B01001\", \"B01002\", \"B01003\", \"B07001\", \"B07009\", \"B07409\", \"B15003\", \"B25071\")\n\nsystem.time(df1 <- get_acsfile(tabnames[2]))\n\ndf2 <- df1 |> \n  lcnames()\n\ntmp <- df2 |> filter(str_detect(geo_id, \"US36\"))\n\ngeo2022 |> filter(geo_id==\"0600000US3600354523\")\n\ndf3 <- geo2022 |> \n  select(geo_id, stabbr, name, geotype, state, county, cousub, place, sumlevel, b01003_001e) |> \n  left_join(df2, by = join_by(geo_id)) |> \n  filter(b01002_e001 >= 0)\n\n\n```\n\n\n\n```{r constants}\n#| label: constants\n#| eval: true\n#| include: false\n\n# key counties\n# 36091 Saratoga\n# 36113 Warren\n# 36115 Washington\n\n# key cousubs\n# 3611511836 Cambridge town\n# 3611530686 Greenwich town\n# 3611564782 Salem town\n# 3611581578 White Creek town\n# tmp <- c(\"3611511836\", \"3611530686\", \"3611581578\")\n\n# key places\n# 3602550 Argyle village\n# 3611825 Cambridge village\n# 3630675 Greenwich village\n# 3664771 Salem CDP\n# 3665750 Schuylerville\n\n# school district\n# 3606210    Cambridge Central School District\n# 3612900    Greenwich Central School District\n# 3625470    Salem Central School District\n\n# areas of interest\n# use full affgeoid rather than shortened geoid avoids getting Alden school district for Argyle village\n# geoid 3602550 which is the same as Argyle village\nstate_aoi <- c(\"0400000US36\")\ncnty_aoi <- c(\"0500000US36091\", \"0500000US36113\", \"0500000US36115\")\nvlg_aoi <- c(\"1600000US3602550\", \"1600000US3611825\", \"1600000US3630675\", \"1600000US3664771\", \"1600000US3665750\") \ntwn_aoi <- c(\"0600000US3611511836\", \"0600000US3611530686\", \"0600000US3611581578\")\n              \ntmp <- geo2022 |> filter(stabbr==\"NY\" & county==\"115\")\n\naoi <- c(state_aoi, cnty_aoi, vlg_aoi, twn_aoi)\n\n\naoi <- geo2022 |> \n  filter(stabbr==\"NY\",\n         geotype==\"state\" |\n           geotype==\"county\" & county %in% c(\"091\", \"113\", \"115\") |\n           geotype==\"cousub\" & geo_id %in% twn_aoi |\n           geotype==\"place\" & geo_id %in% vlg_aoi) |> \n  select(geo_id, sumlevel, stabbr, name, geotype, state, county, cousub, place, b01003_001e)\n\n```\n\n\n```{r}\n#| label: tables-of-interest\n\nv2022 |> filter(str_detect(concept, \"Age\"))\nv2022 |> filter(str_detect(name, \"B02001\"))\nv2022 |> filter(group==\"B01002\") # median age B01002_001E\n\nv2022 |> filter(str_detect(concept, \"Race\"))\nv2022 |> filter(str_detect(name, \"B02001\"))\n\n\n\n\n\n```\n\n```{r}\n#| label: get-full-geo\n\nacstab <- \"B01003\"\nyear <- 2022\n\ngnation <- get_acs(geography = \"us\",\n                  table = acstab,\n                  year=year,\n                  survey=\"acs5\",\n                  state=NULL,\n                  geometry = TRUE,\n                  keep_geo_vars = TRUE,  # TRUE only works if we set geometry=TRUE\n                  cache_table = TRUE) \n\n```\n\n\n## Age\n```{r}\n# B02001 median age\n\nacstab <- \"B02001\"\nyear <- 2022\n\nv2022 |> filter(str_detect(name, \"B02001\"))\n\nnation <- get_acs(geography = \"us\",\n                  table = acstab,\n                  year=year,\n                  survey=\"acs5\",\n                  state=NULL,\n                  geometry = FALSE,\n                  keep_geo_vars = FALSE,  # TRUE only works if we set geometry=TRUE\n                  cache_table = TRUE) |>\n    mutate(geotype=\"nation\")\n\nstate <- get_acs(geography = \"state\",\n                 table = acstab,\n                 year=year,\n                 survey=\"acs5\",\n                 state=c(\"NY\", \"VT\"),\n                 geometry = FALSE,\n                 keep_geo_vars = FALSE,  # TRUE only works if we set geometry=TRUE\n                 cache_table = TRUE) |>\n    mutate(geotype=\"state\")\n\ncounty <- get_acs(geography = \"county\",\n                 table = acstab,\n                 year=year,\n                 survey=\"acs5\",\n                 state=c(\"NY\", \"VT\"),\n                 geometry = FALSE,\n                 keep_geo_vars = FALSE,  # TRUE only works if we set geometry=TRUE\n                 cache_table = TRUE) |>\n    mutate(geotype=\"county\")\n\ncousubs <- get_acs(geography=\"county subdivision\",\n                   table=acstab,\n                   year=year,\n                   state=\"NY\",\n                   # county=cosubs_county,\n                   geometry = FALSE,\n                   keep_geo_vars = FALSE,\n                   cache_table = TRUE\n                   ) |>\n  mutate(geotype=\"cousub\")\n\n\nget_acs(\n  geography,\n  variables = NULL,\n  table = NULL,\n  cache_table = FALSE,\n  year = 2021,\n  output = \"tidy\",\n  state = NULL,\n  county = NULL,\n  zcta = NULL,\n  geometry = FALSE,\n  keep_geo_vars = FALSE,\n  shift_geo = FALSE,\n  summary_var = NULL,\n  key = NULL,\n  moe_level = 90,\n  survey = \"acs5\",\n  show_call = FALSE,\n  ...\n)\n\n\n\n```\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":8,"fig-height":6,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"note":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","number-sections":true,"toc-depth":5,"output-file":"demog.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.528","editor_options":{"chunk_output_type":"console"},"editor":{"markdown":{"canonical":true}},"theme":"cosmo"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}